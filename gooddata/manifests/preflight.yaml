apiVersion: troubleshoot.sh/v1beta2
kind: Preflight
metadata:
  name: example-preflight-checks
spec:
  analyzers:
    - clusterVersion:
        outcomes:
          - fail:
              when: "< 1.13.0"
              message: The application requires at Kubernetes 1.13.0 or later, and recommends 1.15.0.
              uri: https://www.kubernetes.io
          - warn:
              when: "< 1.15.0"
              message: Your cluster meets the minimum version of Kubernetes, but we recommend you update to 1.15.0 or later.
              uri: https://kubernetes.io
          - pass:
              message: Your cluster meets the recommended and required versions of Kubernetes.
    - containerRuntime:
        outcomes:
          - pass:
              when: "== docker"
              message: Docker container runtime was found.
          - fail:
              message: Did not find Docker container runtime.
    - distribution:
        checkName: Check Kubernetes environment.
        outcomes:
          - fail:
              when: "== docker-desktop"
              message: The application does not support Docker Desktop Clusters
          - fail:
              when: "== microk8s"
              message: The application does not support Microk8s Clusters
          - fail:
              when: "== minikube"
              message: The application does not support Minikube Clusters
          - pass:
              when: "== eks"
              message: EKS is a supported distribution
          - pass:
              when: "== gke"
              message: GKE is a supported distribution
          - pass:
              when: "== aks"
              message: AKS is a supported distribution
          # Will be supported in the future
          - pass:
              when: "== kurl"
              message: KURL is a supported distribution
          - pass:
              when: "== digitalocean"
              message: DigitalOcean is a supported distribution
          - warn:
              message: Unable to determine the distribution of Kubernetes
    - nodeResources:
        checkName: Total CPU Cores in the cluster is 4 or greater
        outcomes:
          - fail:
              when: "sum(cpuCapacity) < 4"
              message: The cluster must contain at least 4 cores
          - pass:
              message: There are at least 4 cores in the cluster
    - nodeResources:
        checkName: Cluster Memory
        outcomes:
          - fail:
              when: "sum(memoryAllocatable) < 3Gi"
              message: GoodData Requires 3Gi allocatable memory, with 6Gi recommended
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - warn:
              when: "sum(memoryAllocatable) < 6Gi"
              message: GoodData Requires 3Gi allocatable memory, with 6Gi recommended
              uri: https://kurl.sh/docs/install-with-kurl/system-requirements
          - pass:
              message: Cluster has at least 6 Gi of memory
