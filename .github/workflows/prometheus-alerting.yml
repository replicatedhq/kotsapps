name: Release Prometheus Alerting Demo

on:
  push:
    paths:
    - 'prometheus-alerting/**'
    - '!doc/**'
    - '!**.png'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Get tag name, if specified
      run: if grep -q "/tags/" <<< "${GITHUB_REF}"; then echo ::set-output name=tag::${GITHUB_REF:10}; fi
      id: get_tag
    - name: Get branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: get_branch
    - name: Debug Environment
      run: echo ${GITHUB_REF} - ${GITHUB_BRANCH} - ${GITHUB_BRANCH_NAME} - ${GITHUB_TAG_NAME}
      env:
        GITHUB_BRANCH: ${{ steps.get_branch.outputs.branch }}
        GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
        GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
    - name: push docker image
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASS registry.replicated.com
        docker build -t registry.replicated.com/${REPLICATED_APP}/prometheus-alerting:${GITHUB_SHA::7} prometheus-alerting
        docker push registry.replicated.com/${REPLICATED_APP}/prometheus-alerting:${GITHUB_SHA::7}

        sed -i.bak "s/REPLICATED_APP/${REPLICATED_APP}/g" prometheus-alerting/manifests/flaky-app.yaml
        sed -i.bak "s/latest/${GITHUB_SHA::7}/g" prometheus-alerting/manifests/flaky-app.yaml

        docker tag registry.replicated.com/${REPLICATED_APP}/prometheus-alerting:${GITHUB_SHA::7} registry.replicated.com/${REPLICATED_APP}/prometheus-alerting:latest
        docker push registry.replicated.com/${REPLICATED_APP}/prometheus-alerting:latest
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP__PA }}
    - name: Lint the release
      uses: docker://replicated/vendor-cli:latest
      with:
        args: release lint --yaml-dir=prometheus-alerting/manifests
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP__PA }}
    - name: Create a release on Channel associated with the branch
      uses: docker://replicated/vendor-cli:latest
      with:
        args: release create --auto -y --yaml-dir=prometheus-alerting/manifests
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP__PA }}
        GITHUB_BRANCH: ${{ steps.get_branch.outputs.branch }}
        GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
        GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}
    - name: Create a kurl release
      uses: docker://replicated/vendor-cli:latest
      with:
        args: installer create --auto -y --yaml-file=prometheus-alerting/kurl-installer.yaml
      env:
        REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
        REPLICATED_APP: ${{ secrets.REPLICATED_APP__PA }}
        GITHUB_BRANCH: ${{ steps.get_branch.outputs.branch }}
        GITHUB_BRANCH_NAME: ${{ steps.get_branch.outputs.branch }}
        GITHUB_TAG_NAME: ${{ steps.get_tag.outputs.tag }}


